require_relative '../../node_modules/@capacitor/ios/scripts/pods_helpers'

platform :ios, '15.0'
use_frameworks!

# workaround to avoid Xcode caching of Pods that requires
# Product -> Clean Build Folder after new Cordova plugins installed
# Requires CocoaPods 1.6 or newer
install! 'cocoapods'

source 'https://cdn.cocoapods.org/'

def capacitor_pods
  pod 'Capacitor', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorApp', :path => '../../node_modules/@capacitor/app'
  pod 'CapacitorDevice', :path => '../../node_modules/@capacitor/device'
  pod 'CapacitorLocalNotifications', :path => '../../node_modules/@capacitor/local-notifications'
  pod 'CapacitorPreferences', :path => '../../node_modules/@capacitor/preferences'
  pod 'CapacitorSplashScreen', :path => '../../node_modules/@capacitor/splash-screen'
  pod 'CapacitorStatusBar', :path => '../../node_modules/@capacitor/status-bar'
  pod 'RevenuecatPurchasesCapacitor', :path => '../../node_modules/@revenuecat/purchases-capacitor'
end

target 'App' do
  capacitor_pods
  # Add your Pods here
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      
      # Specifically for the Pods-App target, create framework file lists
      if target.name == 'Pods-App'
        # Get the list of frameworks to include
        frameworks = [
          'Capacitor',
          'CapacitorApp',
          'CapacitorCordova',
          'CapacitorDevice',
          'CapacitorLocalNotifications',
          'CapacitorPreferences',
          'CapacitorSplashScreen',
          'CapacitorStatusBar',
          'PurchasesHybridCommon',
          'RevenueCat',
          'RevenuecatPurchasesCapacitor'
        ]
        
        # Create input list
        input_list = ["${PODS_ROOT}/Target Support Files/Pods-App/Pods-App-frameworks.sh"]
        frameworks.each do |framework|
          if framework == 'CapacitorCordova'
            input_list << "${BUILT_PRODUCTS_DIR}/#{framework}/Cordova.framework"
          else
            input_list << "${BUILT_PRODUCTS_DIR}/#{framework}/#{framework}.framework"
          end
        end
        
        # Create output list
        output_list = []
        frameworks.each do |framework|
          if framework == 'CapacitorCordova'
            output_list << "${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/Cordova.framework"
          else
            output_list << "${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/#{framework}.framework"
          end
        end
        
        # Create the xcfilelist files for both Debug and Release configurations
        ['Debug', 'Release'].each do |config_name|
          # Ensure the directory exists
          FileUtils.mkdir_p("#{Dir.pwd}/Pods/Target Support Files/Pods-App")
          
          # Write the input and output files
          File.write("#{Dir.pwd}/Pods/Target Support Files/Pods-App/Pods-App-frameworks-#{config_name}-input-files.xcfilelist", input_list.join("\n"))
          File.write("#{Dir.pwd}/Pods/Target Support Files/Pods-App/Pods-App-frameworks-#{config_name}-output-files.xcfilelist", output_list.join("\n"))
          
          # Create a symlink in the Volumes path if it's different
          volumes_path = "/Volumes/workspace/repository/ios/App/Pods/Target Support Files/Pods-App"
          if Dir.pwd != volumes_path && !volumes_path.empty?
            begin
              # Create directory structure if it doesn't exist
              system("mkdir -p \"#{volumes_path}\"")
              
              # Create symlinks (overwrite existing)
              system("ln -sf \"#{Dir.pwd}/Pods/Target Support Files/Pods-App/Pods-App-frameworks-#{config_name}-input-files.xcfilelist\" \"#{volumes_path}/Pods-App-frameworks-#{config_name}-input-files.xcfilelist\"")
              system("ln -sf \"#{Dir.pwd}/Pods/Target Support Files/Pods-App/Pods-App-frameworks-#{config_name}-output-files.xcfilelist\" \"#{volumes_path}/Pods-App-frameworks-#{config_name}-output-files.xcfilelist\"")
            rescue => e
              puts "Warning: Could not create symlink: #{e.message}"
            end
          end
        end
      end
      
      # Special handling for PurchasesHybridCommon to ensure it builds properly
      if target.name == 'PurchasesHybridCommon'
        config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      end
    end
  end
end