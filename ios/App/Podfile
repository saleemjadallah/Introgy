require_relative '../../node_modules/@capacitor/ios/scripts/pods_helpers'

platform :ios, '15.0'
use_frameworks!

# workaround to avoid Xcode caching of Pods that requires
# Product -> Clean Build Folder after new Cordova plugins installed
# Requires CocoaPods 1.6 or newer
install! 'cocoapods'

source 'https://cdn.cocoapods.org/'

def capacitor_pods
  pod 'Capacitor', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorApp', :path => '../../node_modules/@capacitor/app'
  pod 'CapacitorDevice', :path => '../../node_modules/@capacitor/device'
  pod 'CapacitorLocalNotifications', :path => '../../node_modules/@capacitor/local-notifications'
  pod 'CapacitorPreferences', :path => '../../node_modules/@capacitor/preferences'
  pod 'CapacitorSplashScreen', :path => '../../node_modules/@capacitor/splash-screen'
  pod 'CapacitorStatusBar', :path => '../../node_modules/@capacitor/status-bar'
  pod 'RevenuecatPurchasesCapacitor', :path => '../../node_modules/@revenuecat/purchases-capacitor'
end

target 'App' do
  capacitor_pods
  # Add your Pods here
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'
      
      if target.name == 'Pods-App'
        # Generate framework file lists
        input_list = []
        output_list = []
        
        frameworks = [
          'Capacitor',
          'CapacitorApp',
          'CapacitorCordova',
          'CapacitorDevice',
          'CapacitorLocalNotifications',
          'CapacitorPreferences',
          'CapacitorSplashScreen',
          'CapacitorStatusBar',
          'PurchasesHybridCommon',
          'RevenueCat',
          'RevenuecatPurchasesCapacitor'
        ]
        
        # Add frameworks script
        input_list << '${PODS_ROOT}/Target Support Files/Pods-App/Pods-App-frameworks.sh'
        
        frameworks.each do |framework|
          input_list << "${BUILT_PRODUCTS_DIR}/#{framework}/#{framework}.framework"
          output_list << "${TARGET_BUILD_DIR}/${FRAMEWORKS_FOLDER_PATH}/#{framework}.framework"
        end
        
        # Create the xcfilelist files
        File.write("Pods/Target Support Files/Pods-App/Pods-App-frameworks-#{config.name}-input-files.xcfilelist", input_list.join("\n"))
        File.write("Pods/Target Support Files/Pods-App/Pods-App-frameworks-#{config.name}-output-files.xcfilelist", output_list.join("\n"))
        
        # Update build settings
        config.build_settings['FRAMEWORK_SEARCH_PATHS'] = ['$(inherited)', '"$(PODS_ROOT)/Target Support Files/Pods-App"']
        config.build_settings['PODS_ROOT'] = '$(SRCROOT)/Pods'
        config.build_settings['PODS_BUILD_DIR'] = '$(BUILD_DIR)'
        config.build_settings['PODS_CONFIGURATION_BUILD_DIR'] = '$(PODS_BUILD_DIR)/$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)'
        config.build_settings['PODS_XCFRAMEWORKS_BUILD_DIR'] = '$(PODS_CONFIGURATION_BUILD_DIR)/XCFrameworkIntermediates'
      end
    end
  end
end